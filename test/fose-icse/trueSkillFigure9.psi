
def main(){ // trueSkill
    skillA := gauss(100,10);
    skillB := gauss(100,10);
    skillC := gauss(100,10);

    // first game:A vs B, A won
    perfA1 := gauss(skillA,15);
    perfB1 := gauss(skillB,15);
    observe(perfA1 > perfB1);

    // second game:B vs C, B won
    perfB2 := gauss(skillB,15);
    perfC2 := gauss(skillC,15);
    observe(perfB2 > perfC2);

    // third game:A vs C, A won
    perfA3 := gauss(skillA,15);
    perfC3 := gauss(skillC,15);
    observe(perfA3 > perfC3);

    return (skillA,skillB,skillC); // expected: (-(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillA·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillB·ξ₁·⅟15))·e^(skillA²·⅟30)·⅟600^(3/2)·⅟π^(9/2)+e^(skillA²·⅟30+skillB²·⅟30)·⅟600^(3/2)·⅟π^(7/2)·√3̅0̅)·(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillC·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillA·ξ₁·⅟15))·(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillC·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillB·ξ₁·⅟15))·[(∫dξ₁(∫dξ₂(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₂·⅟√3̅0̅)·(∫dξ₃(-(∫dξ₄(∫dξ₅(d/dx)⁻¹[e^(-x²)](-ξ₄·⅟√3̅0̅+ξ₅·⅟√3̅0̅)·e^((2/105·ξ₅+20/7)·ξ₂+-ξ₅²·⅟42+20/7·ξ₅))·e^(-ξ₄²·⅟12+10·ξ₄+ξ₃·ξ₄·⅟15))·e^(1500/7+ξ₂²·⅟105)·⅟600^(3/2)·⅟π⁴·√6̅0̅/̅7̅+e^(4·ξ₂+4·ξ₃+600+ξ₂²·⅟75+ξ₃²·⅟75)·⅟600^(3/2)·⅟π^(5/2)·√4̅3̅2̅0̅)·(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₃·⅟√3̅0̅)·⅟e^(ξ₃²·⅟30))·⅟e^(ξ₂²·⅟30))·e^(-ξ₁²·⅟20+10·ξ₁))·⅟e¹⁵⁰⁰≠0]·e^(-7/60·skillA²+-7/60·skillB²+-skillC²·⅟20+10·skillA+10·skillB+10·skillC)·⅟(∫dξ₁(∫dξ₂(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₂·⅟√3̅0̅)·(∫dξ₃(-(∫dξ₄(∫dξ₅(d/dx)⁻¹[e^(-x²)](-ξ₄·⅟√3̅0̅+ξ₅·⅟√3̅0̅)·e^((2/105·ξ₅+20/7)·ξ₂+-ξ₅²·⅟42+20/7·ξ₅))·e^(-ξ₄²·⅟12+10·ξ₄+ξ₃·ξ₄·⅟15))·e^(1500/7+ξ₂²·⅟105)·⅟600^(3/2)·⅟π⁴·√6̅0̅/̅7̅+e^(4·ξ₂+4·ξ₃+600+ξ₂²·⅟75+ξ₃²·⅟75)·⅟600^(3/2)·⅟π^(5/2)·√4̅3̅2̅0̅)·(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₃·⅟√3̅0̅)·⅟e^(ξ₃²·⅟30))·⅟e^(ξ₂²·⅟30))·e^(-ξ₁²·⅟20+10·ξ₁))
}
