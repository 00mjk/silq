// skipped: quite slow
// TODO: make fast!
// our implementation already supports this example up to the following fidelity:

def main(){
    observedResults0 := 1;
    observedResults1 := 1;
    observedResults2 := 0;
    observedResults3 := 1;
    observedResults4 := 0;

    bias := Beta(2,5);

    tossResults0 := Bernoulli(bias);
    tossResults1 := Bernoulli(bias);
    tossResults2 := Bernoulli(bias);
    tossResults3 := Bernoulli(bias);
    tossResults4 := Bernoulli(bias);

    observe(tossResults0 == observedResults0);
    observe(tossResults1 == observedResults1);
    observe(tossResults2 == observedResults2);
    observe(tossResults3 == observedResults3);
    observe(tossResults4 == observedResults4);

    return bias; // expected: (-2100·bias+-2100·bias³+3150·bias²+525+525·bias⁴)·(-4·bias·⅟9+4·⅟9)·(-99·bias·⅟10+99·⅟10)·[-1+bias≤0]·[-bias≤0]·bias⁴
    // TODO: better simplification
}