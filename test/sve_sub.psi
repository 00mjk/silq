def maink(){
    dd := uniform(0,1)+uniform(0,1);
    r := uniform(0,1) + gauss(dd,1);// + Gauss(10,1);
    //r := Gauss(dd,1);
    return r; // expected: ((d/dx)⁻¹[e^(-x²)]((-r+1)·⅟√2̅)·2·e^(r²·⅟2)+(d/dx)⁻¹[e^(-x²)]((-r+1)·⅟√2̅)·e^(r²·⅟2)·r²+(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅)·e^(r²·⅟2)+(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅)·e^(r²·⅟2)·r²·⅟2+(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅+√2̅)·5·e^(r²·⅟2)+(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅+√2̅)·e^(r²·⅟2)·r²·⅟2+(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+√2̅)·6·e^(r²·⅟2)·r+-(d/dx)⁻¹[e^(-x²)]((-r+1)·⅟√2̅)·2·e^(r²·⅟2)·r+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅)·e^(r²·⅟2)·r²·⅟2+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅)·e^(r²·⅟2)·⅟2+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅)·e^(r²·⅟2)·r+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+⅟√2̅+√2̅)·3·e^(r²·⅟2)·r+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+√2̅)·15/2·e^(r²·⅟2)+-(d/dx)⁻¹[e^(-x²)](-r·⅟√2̅+√2̅)·3/2·e^(r²·⅟2)·r²+-2^(3/2)·e^(-2+2·r)+-e^(-1/2+r)·r·⅟2^(3/2)+-e^(-1/2+r)·r·√2̅+-e^(-1/2+r)·⅟2^(3/2)+-e^(-2+2·r)·r·⅟2^(3/2)+-e^(-9/2+3·r)·r·⅟2^(3/2)+-e^(-9/2+3·r)·⅟√2̅+-r·⅟2^(3/2)+e^(-1/2+r)·r·⅟√2̅+e^(-1/2+r)·√2̅+e^(-2+2·r)·r·√2̅+e^(-2+2·r)·⅟√2̅+e^(-9/2+3·r)·⅟2^(3/2)+e^(-9/2+3·r)·√2̅+r·⅟√2̅)·`q()·⅟e^(r²·⅟2)·⅟√π̅
    // TODO: evaluate normalization constant (need to evaluate the limit more quickly)
}
