
def main(){ // trueSkill
    skillA := gauss(100,10);
    skillB := gauss(100,10);
    skillC := gauss(100,10);

    // first game:A vs B, A won
    perfA1 := gauss(skillA,15);
    perfB1 := gauss(skillB,15);
    observe(perfA1 > perfB1);

    // second game:B vs C, B won
    perfB2 := gauss(skillB,15);
    perfC2 := gauss(skillC,15);
    observe(perfB2 > perfC2);

    // third game:A vs C, A won
    perfA3 := gauss(skillA,15);
    perfC3 := gauss(skillC,15);
    observe(perfA3 > perfC3);

    return (skillA,skillB,skillC); // expected: (-(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillA·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillC·ξ₁·⅟15))·e^(skillA²·⅟30)·⅟20·√3̅0̅+3·e^(skillA²·⅟30+skillC²·⅟30)·π·⅟2)·(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillB·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillA·ξ₁·⅟15))·(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillC·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillB·ξ₁·⅟15))·[(∫dξ₁(∫dξ₂(∫dξ₃(-(∫dξ₄(∫dξ₅(d/dx)⁻¹[e^(-x²)](-ξ₄·⅟√3̅0̅+ξ₅·⅟√3̅0̅)·e^(-ξ₅²·⅟30+ξ₂·ξ₅·⅟15))·e^(-ξ₄²·⅟12+10·ξ₄+ξ₃·ξ₄·⅟15))·⅟20·√3̅0̅+3·e^(300+4·ξ₃+ξ₂²·⅟30+ξ₃²·⅟75)·π^(3·⅟2)·⅟2·√1̅2̅)·(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₃·⅟√3̅0̅)·⅟e^(ξ₃²·⅟30))·(∫dξ₃(d/dx)⁻¹[e^(-x²)](-ξ₂·⅟√3̅0̅+ξ₃·⅟√3̅0̅)·e^(-ξ₃²·⅟30+ξ₁·ξ₃·⅟15))·e^(-ξ₂²·⅟12+10·ξ₂))·e^(-ξ₁²·⅟12+10·ξ₁))·⅟e¹⁵⁰⁰·⅟π^(9·⅟2)·⅟√1̅6̅2̅0̅0̅0̅0̅0̅≠0]·e^(-7·skillA²·⅟60+-skillB²·⅟12+-skillC²·⅟12+10·skillA+10·skillB+10·skillC)·⅟(∫dξ₁(∫dξ₂(∫dξ₃(-(∫dξ₄(∫dξ₅(d/dx)⁻¹[e^(-x²)](-ξ₄·⅟√3̅0̅+ξ₅·⅟√3̅0̅)·e^(-ξ₅²·⅟30+ξ₂·ξ₅·⅟15))·e^(-ξ₄²·⅟12+10·ξ₄+ξ₃·ξ₄·⅟15))·⅟20·√3̅0̅+3·e^(300+4·ξ₃+ξ₂²·⅟30+ξ₃²·⅟75)·π^(3·⅟2)·⅟2·√1̅2̅)·(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₃·⅟√3̅0̅)·⅟e^(ξ₃²·⅟30))·(∫dξ₃(d/dx)⁻¹[e^(-x²)](-ξ₂·⅟√3̅0̅+ξ₃·⅟√3̅0̅)·e^(-ξ₃²·⅟30+ξ₁·ξ₃·⅟15))·e^(-ξ₂²·⅟12+10·ξ₂))·e^(-ξ₁²·⅟12+10·ξ₁))
}
