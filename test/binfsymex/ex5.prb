// skipped
// Example 5.

def trueSkill(){
    skillA := Gauss(100,10);
    skillB := Gauss(100,10);
    skillC := Gauss(100,10);
    
    // first game: A vs B, A won
    perfA1 := Gauss(skillA,15);
    perfB1 := Gauss(skillB,15);
    observe(perfA1 > perfB1);
    
    // second game: B vs C, B won
    perfB2 := Gauss(skillB,15);
    perfC2 := Gauss(skillC,15);
    observe(perfB2 > perfC2);

    // second game: A vs C, A won
    perfA3 := Gauss(skillA,15);
    perfC3 := Gauss(skillC,15);
    observe(perfA3 > perfC3);

    return (skillA,skillB,skillC); // expected: (-(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillA·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillB·ξ₁·⅟15))·e^(skillA²·⅟30)·√3̅0̅+30·e^(skillA²·⅟30+skillB²·⅟30)·π)·(-(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillA·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillC·ξ₁·⅟15))·e^(skillA²·⅟30)·⅟20·√3̅0̅+3·e^(skillA²·⅟30+skillC²·⅟30)·π·⅟2)·(-(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillB·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillC·ξ₁·⅟15))·e^(skillB²·⅟30)·√3̅0̅+30·e^(skillB²·⅟30+skillC²·⅟30)·π)·e^(-1500+-7·skillA²·⅟60+-7·skillB²·⅟60+-7·skillC²·⅟60+10·skillA+10·skillB+10·skillC)·q(γ⃗)·⅟π^(9·⅟2)·⅟√1̅4̅5̅8̅0̅0̅0̅0̅0̅0̅0̅
}
    
