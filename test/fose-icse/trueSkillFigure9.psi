
def main(){ // trueSkill
    skillA := gauss(100,10);
    skillB := gauss(100,10);
    skillC := gauss(100,10);

    // first game:A vs B, A won
    perfA1 := gauss(skillA,15);
    perfB1 := gauss(skillB,15);
    observe(perfA1 > perfB1);

    // second game:B vs C, B won
    perfB2 := gauss(skillB,15);
    perfC2 := gauss(skillC,15);
    observe(perfB2 > perfC2);

    // third game:A vs C, A won
    perfA3 := gauss(skillA,15);
    perfC3 := gauss(skillC,15);
    observe(perfA3 > perfC3);

    return (skillA,skillB,skillC); // expected: (-(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillB·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillC·ξ₁·⅟15))·e^(skillB²·⅟30)·⅟20·⅟π^(9·⅟2)·⅟√5̅4̅0̅0̅0̅0̅+e^(skillB²·⅟30+skillC²·⅟30)·⅟20·⅟π^(7·⅟2)·⅟√1̅8̅0̅0̅0̅)·(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillB·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillA·ξ₁·⅟15))·(∫dξ₁(d/dx)⁻¹[e^(-x²)](-skillC·⅟√3̅0̅+ξ₁·⅟√3̅0̅)·e^(-ξ₁²·⅟30+skillA·ξ₁·⅟15))·[(∫dξ₁(∫dξ₂(-(∫dξ₃(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₃·⅟√3̅0̅)·e^(-ξ₃²·⅟30+ξ₂·ξ₃·⅟15))·e^(ξ₁²·⅟30)·⅟20·⅟π⁴·⅟√6̅3̅0̅0̅0̅+e^(ξ₁²·⅟30+ξ₂²·⅟30)·⅟20·⅟π³·⅟√2̅1̅0̅0̅)·(∫dξ₃(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₃·⅟√3̅0̅)·(∫dξ₄(d/dx)⁻¹[e^(-x²)](-ξ₂·⅟√3̅0̅+ξ₄·⅟√3̅0̅)·e^((20·⅟7+2·ξ₄·⅟105)·ξ₃+-ξ₄²·⅟42+20·ξ₄·⅟7))·⅟e^(ξ₃²·⅟42))·e^(-ξ₂²·⅟12+10·ξ₂))·e^(-ξ₁²·⅟12+10·ξ₁))·⅟e^(9000·⅟7)≠0]·e^(-1500·⅟7+-7·skillA²·⅟60+-skillB²·⅟12+-skillC²·⅟12+10·skillA+10·skillB+10·skillC)·⅟(∫dξ₁(∫dξ₂(-(∫dξ₃(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₃·⅟√3̅0̅)·e^(-ξ₃²·⅟30+ξ₂·ξ₃·⅟15))·e^(ξ₁²·⅟30)·⅟20·⅟π⁴·⅟√6̅3̅0̅0̅0̅+e^(ξ₁²·⅟30+ξ₂²·⅟30)·⅟20·⅟π³·⅟√2̅1̅0̅0̅)·(∫dξ₃(d/dx)⁻¹[e^(-x²)](-ξ₁·⅟√3̅0̅+ξ₃·⅟√3̅0̅)·(∫dξ₄(d/dx)⁻¹[e^(-x²)](-ξ₂·⅟√3̅0̅+ξ₄·⅟√3̅0̅)·e^((20·⅟7+2·ξ₄·⅟105)·ξ₃+-ξ₄²·⅟42+20·ξ₄·⅟7))·⅟e^(ξ₃²·⅟42))·e^(-ξ₂²·⅟12+10·ξ₂))·e^(-ξ₁²·⅟12+10·ξ₁))
}
